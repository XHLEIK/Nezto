import React, { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import "bootstrap/dist/css/bootstrap.min.css";
import "./App.css";
import { useUser } from "./UserContext";

const ServicesPage = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const { services } = useUser();
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState(null);
  const [searchQuery, setSearchQuery] = useState("");
  const [activeCategory, setActiveCategory] = useState("all");
  const [sortOption, setSortOption] = useState("recommended");
  const [showFilters, setShowFilters] = useState(false);
  const [showAnimation, setShowAnimation] = useState(false);
  
  // Enhanced categories with brand colors and better icons
  const categories = [
    { id: "all", name: "All Services", icon: "fas fa-th", color: "#40BFC1" },
    { id: "daily", name: "Daily Wear", icon: "fas fa-tshirt", color: "#FF9800" },
    { id: "premium", name: "Premium", icon: "fas fa-crown", color: "#8E44AD" },
    { id: "home", name: "Home Care", icon: "fas fa-home", color: "#4CAF50" },
    { id: "quick", name: "Quick Service", icon: "fas fa-bolt", color: "#F44336" }
  ];

  // Enhanced sorting options with better icons
  const sortOptions = [
    { id: "recommended", name: "Recommended", icon: "fas fa-thumbs-up" },
    { id: "price_low", name: "Price: Low to High", icon: "fas fa-sort-amount-down" },
    { id: "price_high", name: "Price: High to Low", icon: "fas fa-sort-amount-up" },
    { id: "popularity", name: "Popularity", icon: "fas fa-fire" }
  ];
  
  // Service icon mapping - with more visual variety
  const serviceIcons = {
    "dry-clean": "fas fa-tshirt",
    "laundry-wash": "fas fa-soap",
    "ironing": "fas fa-hot-tub",
    "express-service": "fas fa-bolt",
    "shoe-cleaning": "fas fa-shoe-prints",
    "carpet-clean": "fas fa-broom",
    "stain-removal": "fas fa-eraser",
    "premium-laundry": "fas fa-gem",
    "curtain-clean": "fas fa-wave-square",
    "suit-clean": "fas fa-user-tie",
    "steam-press": "fas fa-temperature-high",
    "bedding-clean": "fas fa-bed",
    "leather-care": "fas fa-mitten",
    "wash-fold": "fas fa-tshirt",
    "premium-suit": "fas fa-user-tie",
    "curtain-wash-iron": "fas fa-wind",
    "home-cleaning": "fas fa-home",
    "sofa-cleaning": "fas fa-couch"
  };
  
  // Get category color
  const getCategoryColor = (categoryId) => {
    const category = categories.find(cat => cat.id === categoryId);
    return category ? category.color : "#40BFC1";
  };
  
  // Default services with enhanced properties
  const defaultServices = [
    { id: "dry-clean", name: "Dry Cleaning", icon: "fas fa-tshirt", price: 149, description: "Professional eco-friendly cleaning", rating: 4.7, time: "24-48 hrs", popularity: 95, category: "daily", badge: "Popular" },
    { id: "laundry-wash", name: "Laundry Wash", icon: "fas fa-soap", price: 99, description: "Wash, dry and fold service", rating: 4.5, time: "24 hrs", popularity: 90, category: "daily" },
    { id: "ironing", name: "Ironing Service", icon: "fas fa-hot-tub", price: 99, description: "Professional ironing service", rating: 4.6, time: "24 hrs", popularity: 85, category: "quick" },
    { id: "express-service", name: "Express Service", icon: "fas fa-bolt", price: 199, description: "Quick turn around within 6 hours", rating: 4.8, time: "6 hrs", popularity: 88, category: "quick", badge: "Express" },
    { id: "shoe-cleaning", name: "Shoe Cleaning", icon: "fas fa-shoe-prints", price: 149, description: "Detailed shoe cleaning and care", rating: 4.3, time: "48 hrs", popularity: 75, category: "daily" },
    { id: "carpet-clean", name: "Carpet Cleaning", icon: "fas fa-broom", price: 199, description: "Deep cleaning for carpets and rugs", rating: 4.6, time: "48 hrs", popularity: 80, category: "home" },
    { id: "stain-removal", name: "Stain Removal", icon: "fas fa-eraser", price: 199, description: "Effective stain treatment", rating: 4.7, time: "48 hrs", popularity: 82, category: "premium" },
    { id: "premium-laundry", name: "Premium Laundry", icon: "fas fa-gem", price: 199, description: "Luxury care for your finest garments", rating: 4.9, time: "48-72 hrs", popularity: 92, category: "premium", badge: "Best Seller" },
    { id: "curtain-clean", name: "Curtain Cleaning", icon: "fas fa-wave-square", price: 299, description: "Professional cleaning for curtains and drapes", rating: 4.5, time: "72 hrs", popularity: 78, category: "home" },
    { id: "suit-clean", name: "Suit Cleaning", icon: "fas fa-user-tie", price: 299, description: "Expert cleaning for suits and formal wear", rating: 4.8, time: "48 hrs", popularity: 85, category: "premium" },
    { id: "steam-press", name: "Steam Pressing", icon: "fas fa-temperature-high", price: 149, description: "Professional steam pressing for wrinkle-free garments", rating: 4.6, time: "24 hrs", popularity: 84, category: "quick" },
    { id: "bedding-clean", name: "Bedding Cleaning", icon: "fas fa-bed", price: 249, description: "Deep cleaning for all types of bedding items", rating: 4.7, time: "72 hrs", popularity: 82, category: "home" },
    { id: "leather-care", name: "Leather Care", icon: "fas fa-mitten", price: 299, description: "Professional cleaning and conditioning for leather items", rating: 4.8, time: "72 hrs", popularity: 88, category: "premium" },
    { id: "wash-fold", name: "Wash & Fold", icon: "fas fa-tshirt", price: 99, description: "Convenient wash, dry and fold service", rating: 4.5, time: "24 hrs", popularity: 92, category: "daily" },
    { id: "premium-suit", name: "Premium Suit Cleaning", icon: "fas fa-user-tie", price: 399, description: "Luxury cleaning for high-end suits", rating: 4.9, time: "72 hrs", popularity: 94, category: "premium", badge: "Premium" },
    { id: "curtain-wash-iron", name: "Curtain Wash & Iron", icon: "fas fa-wind", price: 249, description: "Complete washing and ironing for curtains", rating: 4.5, time: "72 hrs", popularity: 78, category: "home" },
    { id: "home-cleaning", name: "Home Cleaning", icon: "fas fa-home", price: 499, description: "Professional home cleaning services", rating: 4.7, time: "24 hrs", popularity: 90, category: "home", badge: "Top Rated" },
    { id: "sofa-cleaning", name: "Sofa Cleaning", icon: "fas fa-couch", price: 399, description: "Deep cleaning for sofas and upholstery", rating: 4.8, time: "48 hrs", popularity: 85, category: "home" },
  ];
  
  // State to hold the services that will be displayed
  const [availableServices, setAvailableServices] = useState(defaultServices);
  const [filteredServices, setFilteredServices] = useState([]);
  
  useEffect(() => {
    try {
      // Get query params if any
      const params = new URLSearchParams(location.search);
      const category = params.get('category');
      const query = params.get('search');
      
      if (category) {
        setActiveCategory(category);
      }
      
      if (query) {
        setSearchQuery(query);
      }
      
      // Set available services from context or defaults
      if (services && services.length > 0) {
        setAvailableServices(services);
      } else {
        setAvailableServices(defaultServices);
      }
    } catch (err) {
      console.error("Error loading services:", err);
      setError("Failed to load services, showing default options");
      setAvailableServices(defaultServices);
    } finally {
      // Ensure loading is set to false
      setTimeout(() => {
        setIsLoading(false);
        setShowAnimation(true);
      }, 500);
    }
  }, [services, location.search]);
  
  // Apply filters and sort whenever dependencies change
  useEffect(() => {
    // Filter services based on category and search query
    let results = [...availableServices];
    
    // Apply category filter
    if (activeCategory !== 'all') {
      results = results.filter(service => service.category === activeCategory);
    }
    
    // Apply search filter
    if (searchQuery.trim() !== '') {
      const searchLower = searchQuery.toLowerCase();
      results = results.filter(service => 
        service.name.toLowerCase().includes(searchLower) || 
        service.description.toLowerCase().includes(searchLower)
      );
    }
    
    // Apply sorting
    switch (sortOption) {
      case 'price_low':
        results.sort((a, b) => a.price - b.price);
        break;
      case 'price_high':
        results.sort((a, b) => b.price - a.price);
        break;
      case 'popularity':
        results.sort((a, b) => b.popularity - a.popularity);
        break;
      case 'recommended':
      default:
        // Keep original order or sort by rating for recommended
        results.sort((a, b) => b.rating - a.rating);
        break;
    }
    
    setFilteredServices(results);
  }, [availableServices, activeCategory, searchQuery, sortOption]);
  
  // Handle search form submit
  const handleSearch = (e) => {
    e.preventDefault();
    navigate(`/services?search=${encodeURIComponent(searchQuery)}`);
  };
  
  // Handle category change
  const handleCategoryChange = (categoryId) => {
    setActiveCategory(categoryId);
    navigate(`/services?category=${categoryId}`);
  };
  
  // Handle sort change
  const handleSortChange = (sortId) => {
    setSortOption(sortId);
    setShowFilters(false);
  };
  
  // Handle clicking on a service
  const handleServiceClick = (serviceId) => {
    try {
      navigate(`/service/${serviceId}`);
    } catch (err) {
      console.error("Navigation error:", err);
      alert("Could not navigate to service page. Please try again.");
    }
  };
  
  // Get icon for service (with fallback)
  const getServiceIcon = (serviceId) => {
    return serviceIcons[serviceId] || "fas fa-tshirt";
  };
  
  // Get rating color based on rating value
  const getRatingColor = (rating) => {
    if (rating >= 4.7) return "#4CAF50";
    if (rating >= 4.3) return "#FFC107";
    return "#FF9800";
  };
  
  // Show loading spinner with branded design
  if (isLoading) {
    return (
      <div className="d-flex justify-content-center align-items-center" style={{ minHeight: "100vh", backgroundColor: "#f8f9fa" }}>
        <div className="text-center">
          <div className="spinner-grow" role="status" style={{ color: "#40BFC1", width: "3rem", height: "3rem" }}>
            <span className="visually-hidden">Loading...</span>
          </div>
          <p className="mt-3" style={{ color: "#666", fontWeight: "500" }}>Loading services...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="container-fluid p-0" style={{ backgroundColor: "#f8f9fa", minHeight: "100vh", maxWidth: "100%", overflow: "hidden" }}>
      {/* Modern header with brand gradient */}
      <div style={{ 
        background: "linear-gradient(135deg, #40BFC1 0%, #2A8D8F 100%)",
        padding: "20px 15px 45px",
        color: "white",
        position: "relative"
      }}>
        <div className="d-flex align-items-center mb-3">
          <button 
            className="btn" 
            onClick={() => navigate('/')}
            style={{ 
              width: "36px",
              height: "36px",
              borderRadius: "50%",
              backgroundColor: "rgba(255, 255, 255, 0.2)",
              color: "white",
              border: "none",
              display: "flex",
              alignItems: "center",
              justifyContent: "center",
              marginRight: "8px",
              backdropFilter: "blur(5px)"
            }}
          >
            <i className="fas fa-arrow-left" style={{ fontSize: "0.9rem" }}></i>
          </button>
          <h5 className="mb-0" style={{ fontSize: "2rem", fontWeight: "600" }}>Services</h5>
          <div className="ms-auto">
            <span className="badge rounded-pill" style={{ 
              backgroundColor: "rgba(255, 255, 255, 0.2)", 
              color: "white", 
              fontSize: "0.8rem",
              padding: "5px 12px",
              fontWeight: "500",
              backdropFilter: "blur(5px)"
            }}>
              <i className="fas fa-clock me-1"></i> Open now
            </span>
          </div>
        </div>
        
        {/* Modern search input */}
        <form onSubmit={handleSearch} className="position-absolute" style={{ 
          bottom: "-22px", 
          left: "16px", 
          right: "16px", 
          zIndex: "5" 
        }}>
          <div className="input-group" style={{ 
            backgroundColor: "white", 
            borderRadius: "12px",
            boxShadow: "0 4px 12px rgba(0, 0, 0, 0.08)",
            padding: "4px"
          }}>
            <span className="input-group-text" style={{ 
              backgroundColor: "transparent", 
              border: "none", 
              paddingLeft: "15px"
            }}>
              <i className="fas fa-search" style={{ color: "#40BFC1", fontSize: "0.9rem" }}></i>
            </span>
            <input
              type="text"
              className="form-control"
              placeholder="What are you looking for today?"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              style={{ 
                border: "none",
                backgroundColor: "transparent",
                fontSize: "0.9rem",
                boxShadow: "none",
                padding: "12px 5px"
              }}
            />
          </div>
        </form>
      </div>
      
      {/* Sort options dropdown - modern radio style */}
      {showFilters && (
        <div className="mx-3 my-2 p-3" style={{ 
          backgroundColor: "white", 
          borderRadius: "12px",
          boxShadow: "0 4px 12px rgba(0, 0, 0, 0.08)",
          animation: "fadeIn 0.2s ease"
        }}>
          <h6 className="mb-2 ps-2" style={{ fontSize: "0.9rem", color: "#666" }}>Sort by</h6>
          {sortOptions.map((option) => (
            <div 
              key={option.id}
              onClick={() => handleSortChange(option.id)}
              style={{ 
                cursor: "pointer",
                padding: "10px 12px",
                borderRadius: "8px",
                backgroundColor: sortOption === option.id ? "#F0F9F9" : "transparent",
                marginBottom: "4px",
                transition: "all 0.2s"
              }}
            >
              <div className="d-flex align-items-center">
                <div style={{ 
                  width: "20px", 
                  height: "20px", 
                  borderRadius: "50%",
                  border: `2px solid ${sortOption === option.id ? "#40BFC1" : "#ddd"}`,
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  marginRight: "12px",
                  transition: "all 0.2s"
                }}>
                  {sortOption === option.id && <div style={{ 
                    width: "10px", 
                    height: "10px", 
                    borderRadius: "50%", 
                    backgroundColor: "#40BFC1" 
                  }}></div>}
                </div>
                <div>
                  <span style={{ 
                    fontSize: "0.9rem",
                    fontWeight: sortOption === option.id ? "600" : "400",
                    color: sortOption === option.id ? "#333" : "#666"
                  }}>
                    {option.name}
                  </span>
                </div>
                
                <i className={option.icon} style={{ 
                  marginLeft: "auto", 
                  color: sortOption === option.id ? "#40BFC1" : "#999",
                  fontSize: "0.9rem"
                }}></i>
              </div>
            </div>
          ))}
        </div>
      )}
      
      {/* Results count */}
      <div className="px-3 pt-4 mt-3 pb-1">
        <p style={{ color: "#666", fontSize: "0.85rem", margin: 0 }}>
          <span style={{ fontWeight: "600", color: "#40BFC1" }}>{filteredServices.length}</span> services found
        </p>
      </div>
      
      {/* Empty results - styled empty state */}
      {filteredServices.length === 0 && (
        <div className="text-center py-5 px-3" style={{
          backgroundColor: "white",
          margin: "16px",
          borderRadius: "12px",
          boxShadow: "0 4px 12px rgba(0, 0, 0, 0.05)"
        }}>
          <div style={{ 
            width: "80px", 
            height: "80px", 
            borderRadius: "50%", 
            backgroundColor: "#f0f8f8",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            margin: "0 auto 16px"
          }}>
            <i className="fas fa-search" style={{ fontSize: "2rem", color: "#40BFC1" }}></i>
          </div>
          <h5 style={{ fontWeight: "600", marginBottom: "8px", color: "#333" }}>No services found</h5>
          <p style={{ color: "#777", fontSize: "0.9rem", marginBottom: "20px" }}>Try adjusting your filters or search terms</p>
          <button 
            onClick={() => {
              setSearchQuery('');
              setActiveCategory('all');
              navigate('/services');
            }}
            style={{ 
              backgroundColor: "#40BFC1",
              color: "white",
              border: "none",
              borderRadius: "8px",
              padding: "10px 24px",
              fontSize: "0.9rem",
              fontWeight: "600",
              boxShadow: "0 4px 8px rgba(64, 191, 193, 0.3)"
            }}
          >
            <i className="fas fa-redo-alt me-2"></i>
            Clear Filters
          </button>
        </div>
      )}
      
      {/* Services list - modern card design with colored categories */}
      <div className="px-3" style={{
        opacity: showAnimation ? 1 : 0,
        transform: `translateY(${showAnimation ? 0 : '20px'})`,
        transition: "opacity 0.3s ease, transform 0.3s ease"
      }}>
        {filteredServices.map((service, index) => (
          <div 
            key={service.id} 
            onClick={() => handleServiceClick(service.id)}
            className="mb-3"
            style={{ 
              backgroundColor: "white", 
              borderRadius: "12px", 
              overflow: "hidden",
              boxShadow: "0 2px 12px rgba(0, 0, 0, 0.06)",
              border: "none",
              animation: `fadeIn 0.3s ease forwards ${index * 0.05}s`,
              opacity: 0
            }}
          >
            <div style={{ padding: "16px" }}>
              <div className="d-flex">
                {/* Service Icon with gradient background */}
                <div style={{ 
                  background: `linear-gradient(135deg, ${getCategoryColor(service.category)} 0%, ${getCategoryColor(service.category)}CC 100%)`,
                  width: "60px",
                  height: "60px",
                  borderRadius: "12px",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  marginRight: "16px",
                  color: "white",
                  boxShadow: `0 4px 8px ${getCategoryColor(service.category)}40`
                }}>
                  <i className={getServiceIcon(service.id)} style={{ fontSize: "1.6rem" }}></i>
                </div>
                
                {/* Service info */}
                <div className="flex-grow-1">
                  <div className="d-flex justify-content-between mb-1">
                    <h5 className="mb-0" style={{ fontWeight: "600", fontSize: "2rem" }}>{service.name}</h5>
                    
                    {/* Rating badge without star icon */}
                    <div style={{ 
                      backgroundColor: `${getRatingColor(service.rating)}20`,
                      color: getRatingColor(service.rating),
                      padding: "3px 8px",
                      borderRadius: "6px",
                      fontSize: "0.75rem",
                      fontWeight: "bold",
                      display: "flex",
                      alignItems: "center"
                    }}>
                      {service.rating}
                    </div>
                  </div>
                  
                  {/* Category badge */}
                  <div style={{ marginBottom: "8px" }}>
                    <span style={{ 
                      backgroundColor: `${getCategoryColor(service.category)}15`,
                      color: getCategoryColor(service.category),
                      fontSize: "0.75rem",
                      fontWeight: "500",
                      padding: "3px 10px",
                      borderRadius: "6px",
                      display: "inline-block"
                    }}>
                      <i className={categories.find(c => c.id === service.category)?.icon || "fas fa-tag"} 
                         style={{ marginRight: "5px", fontSize: "0.7rem" }}></i>
                      {service.category === 'quick' ? 'Express' : 
                        service.category === 'premium' ? 'Premium' : 
                        service.category === 'home' ? 'Home Care' : 'Daily Wear'}
                    </span>
                    
                    {/* Optional badge */}
                    {service.badge && (
                      <span style={{ 
                        backgroundColor: "#FFF5E6",
                        color: "#FF9800",
                        fontSize: "0.75rem",
                        fontWeight: "500",
                        padding: "3px 10px",
                        borderRadius: "6px",
                        marginLeft: "8px",
                        display: "inline-block"
                      }}>
                        <i className="fas fa-certificate me-1" style={{ fontSize: "0.7rem" }}></i>
                        {service.badge}
                      </span>
                    )}
                  </div>
                  
                  <p style={{ fontSize: "0.85rem", color: "#666", margin: "0 0 10px" }}>
                    {service.description}
                  </p>
                  
                  <div className="d-flex justify-content-between align-items-center">
                    <span style={{ 
                      color: "#40BFC1", 
                      fontWeight: "700", 
                      fontSize: "1.1rem" 
                    }}>
                      ₹{service.price}
                    </span>
                    <div className="d-flex align-items-center">
                      <span style={{ 
                        color: "#777", 
                        fontSize: "0.8rem",
                        backgroundColor: "#f8f9fa",
                        padding: "4px 10px",
                        borderRadius: "6px",
                        marginRight: "10px"
                      }}>
                        <i className="far fa-clock me-1"></i>{service.time}
                      </span>
                      {/* Add wishlist button */}
                      <button 
                        onClick={(e) => {
                          e.stopPropagation();
                          // Add wishlist functionality here
                        }}
                        style={{ 
                          backgroundColor: "transparent",
                          border: "none",
                          color: "#FF5A5F",
                          padding: "4px",
                          display: "flex",
                          alignItems: "center",
                          justifyContent: "center",
                          cursor: "pointer"
                        }}
                      >
                        <i className="far fa-heart" style={{ fontSize: "1.1rem" }}></i>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      {/* Bottom padding */}
      <div style={{ height: "80px" }}></div>
      
      {/* CSS Animations */}
      <style>
        {`
          @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
          }
        `}
      </style>
    </div>
  );
};

export default ServicesPage;
